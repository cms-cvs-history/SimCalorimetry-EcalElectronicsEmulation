
//----------------------------------------------------
// Contruct TP digis from hardware input flat file(s)
//  and back again 
// Description:
//  - read existing (set of) flat file(s)
//    create corresponding digis     
//  - produce flat file(s) from obtaiend digis
// -> verify identify between input and generated 
//    (set of) flat file(s)
//----------------------------------------------------

process Flat2Flat = {
    
    source = EmptySource {
	untracked int32 maxEvents = 20
    }
    
    service = MessageLogger {
	untracked vstring destinations = { "cout" }
	untracked vstring debugModules = { "*"}
	untracked PSet cout = { 
	    untracked string threshold = "DEBUG" 
	    untracked PSet default = { untracked int32 limit = -1 }
	}
    }
    
    ######################################################################
    # set needed luts
    
    es_source CaloTPGTranscoder = CaloTPGTranscoderULUTs { 
	FileInPath hcalLUT1 
	= 'CalibCalorimetry/CaloTPG/data/outputLUTtranscoder.dat'
	FileInPath hcalLUT2 
	= 'CalibCalorimetry/CaloTPG/data/TPGcalcDecompress2.txt'
    }
    
    ######################################################################
    # create digis from input (set of) flat file(s)
    
    include "SimCalorimetry/EcalElectronicsEmulation/data/EcalFEtoDigi.cfi"
    
    replace flat2digi.SuperModuleId  = -1 
    replace flat2digi.FlatBaseName   = "data_in/ecal_tcc"

    #set number of events to be skipped
    replace flat2digi.SkipEvents     = 0

    #disable energy compression 
    replace flat2digi.doCompressEt   = false
    
    #print debug info
    replace flat2digi.debugPrintFlag = false

    ######################################################################
    # produce flat file:

    include "SimCalorimetry/EcalElectronicsEmulation/data/EcalSimRawData.cfi"
    
    #switch off generation of DCC data:
    replace ecalSimRawData.tcc2dccData = false
    replace ecalSimRawData.srp2dccData = false
    replace ecalSimRawData.fe2dccData  = false

    #extended usage: use compressed (non-tcp) format
    replace ecalSimRawData.trigPrimProducer = "flat2digi"
    replace ecalSimRawData.tcpDigiCollection = ""
    replace ecalSimRawData.unsuppressedDigiProducer = "ecalUnsuppressedDigis"
    
    #verbosity swicth for TCC input data generation
    replace ecalSimRawData.tpVerbose = false
    
    #change default value of TPG:
    replace ecalSimRawData.tccInDefaultVal = 0 
    
    #specify Id of the tcc raw data must be produced for (-1 means every tcc)
    replace ecalSimRawData.tccNum = -1
    
    ######################################################################`    
    # schedule path    

    path p = { flat2digi, ecalSimRawData }

    module outputEvents = PoolOutputModule {
	untracked string fileName = "EcalTPGfromFlat.root"
    }
    
    endpath outpath = { outputEvents }

}
